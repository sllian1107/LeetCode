/*
初始化两个int 作为指示器，分别指向a数组的最后一个元素和b数组的最后一个元素。
然后比较大小，较大的放入a数组的末端。这样不断往前走。直到a数组用完或者b数组用完。
如果a数组先用完，那么就把b数组剩下的所有元素复制到a的前半部分，如果b数组先用完，那么a数组已经是一个有序的数组。
*/
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int ia = m - 1, ib = n - 1, icur = m + n - 1;
        while(ia >= 0 && ib >= 0) {
            nums1[icur--] = nums1[ia] >= nums2[ib] ? nums1[ia--] : nums2[ib--];
        }
        while(ib >= 0) {
            nums1[icur--] = nums2[ib--];
        }
    }
};
